name: Deploy Validation API to Fluence VM

on:
  push:
    branches: [main, agents]
    paths:
      - "agents/**"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/ethdelhisshkey
          chmod 600 ~/.ssh/ethdelhisshkey
          ssh-keyscan -H 81.15.150.171 >> ~/.ssh/known_hosts

      - name: Deploy Validation API to Fluence VM
        run: |
          ssh -i ~/.ssh/ethdelhisshkey -o StrictHostKeyChecking=no ubuntu@81.15.150.171 << 'ENDSSH'
          set -e
          echo "Starting ETH Delhi Validation API deployment..."

          # Step 1: System Setup
          echo "Step 1: System Setup"
          sudo apt-get update -y
          sudo apt-get install -y python3 python3-pip python3-venv curl wget

          # Create backup if exists
          if [ -d ~/eth-delhi-api ]; then
            cp -r ~/eth-delhi-api ~/eth-delhi-api-backup-$(date +%Y%m%d-%H%M%S)
          fi

          # Step 2: Setup Python Environment  
          echo "Step 2: Setup Python Environment"
          mkdir -p ~/eth-delhi-api
          cd ~/eth-delhi-api

          if [ ! -d "venv" ]; then
            echo "Creating Python virtual environment..."
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install fastapi uvicorn python-multipart pandas numpy scikit-learn scipy openpyxl pyarrow python-dotenv pydantic requests spacy
            python -m spacy download en_core_web_sm || echo "SpaCy model failed, continuing..."
          else
            echo "Using existing virtual environment..."
            source venv/bin/activate
          fi

          # Step 3: Download Your Application Files
          echo "Step 3: Download Your Application Files"
          wget -O validation_api.py https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/validation_api.py
          wget -O orchestrator_agent.py https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/orchestrator_agent.py
          wget -O enhanced_validation_agent.py https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/enhanced_validation_agent.py
          wget -O legal_compliance_agent.py https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/legal_compliance_agent.py
          wget -O legal_tools.py https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/legal_tools.py
          wget -O tools.py https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/tools.py
          wget -O validation_dashboard.html https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/validation_dashboard.html

          # Download demo datasets
          wget -O comprehensive_healthcare_dataset.csv https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/comprehensive_healthcare_dataset.csv || echo "Healthcare dataset not found"
          wget -O comprehensive_air_quality_dataset.csv https://raw.githubusercontent.com/HarshS1611/eth-delhi-2025/agents/agents/comprehensive_air_quality_dataset.csv || echo "Air quality dataset not found"

          # Step 4: Test the API
          echo "Step 4: Test the API"
          python validation_api.py &
          sleep 5
          curl http://localhost:8080/health || echo "API test completed"
          pkill -f validation_api.py

          # Step 5: Setup Production Service
          echo "Step 5: Setup Production Service"
          sudo tee /etc/systemd/system/validation-api.service > /dev/null << 'SERVICEEOF'
